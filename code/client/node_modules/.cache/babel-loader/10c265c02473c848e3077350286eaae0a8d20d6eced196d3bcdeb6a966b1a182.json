{"ast":null,"code":"var _jsxFileName = \"/Users/isobelbarkley/Documents/appeng/COMP0067_2023_Team09/ucl-apps-portal/client/src/context/AuthProvider.js\",\n  _s = $RefreshSig$();\nimport { createContext, useState } from \"react\";\n\n// create a new context object (used to pass auth data down component tree) with initial value of empty object\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext({});\n\n// AuthProvider is a higher-order component that takes in other components as children and provides them with authentication data through the AuthContext object\nexport const AuthProvider = _ref => {\n  _s();\n  let {\n    children\n  } = _ref;\n  // initial value is empty object\n  const [auth, setAuth] = useState({});\n  return (\n    /*#__PURE__*/\n    // value prop gives nested components access to auth and setAuth via AuthContext\n    _jsxDEV(AuthContext.Provider, {\n      value: {\n        auth,\n        setAuth\n      },\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 5\n    }, this)\n  );\n};\n\n// note that authcontect and authprovider are two separate things\n_s(AuthProvider, \"taPzfEibMw/EhAy8vagBpo82vCE=\");\n_c = AuthProvider;\nexport default AuthContext;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["createContext","useState","jsxDEV","_jsxDEV","AuthContext","AuthProvider","_ref","_s","children","auth","setAuth","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/isobelbarkley/Documents/appeng/COMP0067_2023_Team09/ucl-apps-portal/client/src/context/AuthProvider.js"],"sourcesContent":["import { createContext, useState } from \"react\";\n\n// create a new context object (used to pass auth data down component tree) with initial value of empty object\nconst AuthContext = createContext({});\n\n// AuthProvider is a higher-order component that takes in other components as children and provides them with authentication data through the AuthContext object\nexport const AuthProvider = ({ children }) => {\n  // initial value is empty object\n  const [auth, setAuth] = useState({});\n\n  return (\n    // value prop gives nested components access to auth and setAuth via AuthContext\n    <AuthContext.Provider value={{ auth, setAuth }}>\n      {children}\n    </AuthContext.Provider>\n  );\n};\n\n// note that authcontect and authprovider are two separate things\nexport default AuthContext;\n"],"mappings":";;AAAA,SAASA,aAAa,EAAEC,QAAQ,QAAQ,OAAO;;AAE/C;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,WAAW,gBAAGJ,aAAa,CAAC,CAAC,CAAC,CAAC;;AAErC;AACA,OAAO,MAAMK,YAAY,GAAGC,IAAA,IAAkB;EAAAC,EAAA;EAAA,IAAjB;IAAEC;EAAS,CAAC,GAAAF,IAAA;EACvC;EACA,MAAM,CAACG,IAAI,EAAEC,OAAO,CAAC,GAAGT,QAAQ,CAAC,CAAC,CAAC,CAAC;EAEpC;IAAA;IACE;IACAE,OAAA,CAACC,WAAW,CAACO,QAAQ;MAACC,KAAK,EAAE;QAAEH,IAAI;QAAEC;MAAQ,CAAE;MAAAF,QAAA,EAC5CA;IAAQ;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EACY;AAE3B,CAAC;;AAED;AAAAT,EAAA,CAZaF,YAAY;AAAAY,EAAA,GAAZZ,YAAY;AAazB,eAAeD,WAAW;AAAC,IAAAa,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}