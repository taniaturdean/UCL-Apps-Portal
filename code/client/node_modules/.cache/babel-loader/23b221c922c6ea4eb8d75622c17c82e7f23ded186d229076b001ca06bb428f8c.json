{"ast":null,"code":"var _s = $RefreshSig$();\nimport axios from \"axios\";\nimport useAuth from \"../hooks/useAuth\";\nimport { useEffect } from \"react\";\nimport { Link, useNavigate, useLocation } from \"react-router-dom\";\naxios.defaults.withCredentials = true;\n\n// Handle call back from auth url and set global auth state\nfunction LoginCallback() {\n  _s();\n  var _location$state, _location$state$from;\n  const {\n    setAuth\n  } = useAuth();\n  const navigate = useNavigate();\n  const location = useLocation();\n  const from = ((_location$state = location.state) === null || _location$state === void 0 ? void 0 : (_location$state$from = _location$state.from) === null || _location$state$from === void 0 ? void 0 : _location$state$from.pathname) || \"/\";\n  const queryParams = new URLSearchParams(location.search);\n  const result = queryParams.get(\"result\");\n  useEffect(() => {\n    if (result === \"allowed\") {\n      const code = queryParams.get(\"code\");\n      const state = queryParams.get(\"state\");\n      axios.get(`http://localhost:5500/oauth/token?state=${state}&code=${code}`).then(response => {\n        console.log(response);\n        if (response.data.auth) {\n          const user = response.data.result;\n          const roles = response.data.roles;\n          setAuth({\n            user: user,\n            roles: roles\n          });\n\n          // redirects user to where they were trying to go (or to home page)\n          navigate(from, {\n            replace: true\n          });\n        } else {\n          setAuth({});\n          console.log(\"Failed to get token.\");\n          // Redirect to a 404 unauthorised page\n          navigate('/Unauthorised', {\n            replace: true\n          });\n        }\n      }).catch(err => {\n        console.log(err);\n      });\n    } else {\n      console.log(\"Authorisation request denied\");\n      // Redirect to a 404 unauthorised page\n      navigate('/Unauthorised', {\n        replace: true\n      });\n    }\n  }, []); // empty dependency array to ensure this effect only runs once on mount\n}\n_s(LoginCallback, \"uyL28771s5CUYMT2cgqe1YW9CSA=\", false, function () {\n  return [useAuth, useNavigate, useLocation];\n});\n_c = LoginCallback;\nexport default LoginCallback;\nvar _c;\n$RefreshReg$(_c, \"LoginCallback\");","map":{"version":3,"names":["axios","useAuth","useEffect","Link","useNavigate","useLocation","defaults","withCredentials","LoginCallback","_s","_location$state","_location$state$from","setAuth","navigate","location","from","state","pathname","queryParams","URLSearchParams","search","result","get","code","then","response","console","log","data","auth","user","roles","replace","catch","err","_c","$RefreshReg$"],"sources":["/Users/isobelbarkley/Documents/appeng/COMP0067_2023_Team09/ucl-apps-portal/client/src/pages/LoginCallback.js"],"sourcesContent":["import axios from \"axios\";\nimport useAuth from \"../hooks/useAuth\";\nimport { useEffect } from \"react\";\nimport { Link, useNavigate, useLocation } from \"react-router-dom\";\n\naxios.defaults.withCredentials = true;\n\n// Handle call back from auth url and set global auth state\nfunction LoginCallback() {\n  const { setAuth } = useAuth();\n\n  const navigate = useNavigate();\n  const location = useLocation();\n  const from = location.state?.from?.pathname || \"/\"\n\n  const queryParams = new URLSearchParams(location.search);\n  const result = queryParams.get(\"result\");\n\n  useEffect(() => {\n    if (result === \"allowed\") {\n      const code = queryParams.get(\"code\");\n      const state = queryParams.get(\"state\");\n\n      axios\n        .get(`http://localhost:5500/oauth/token?state=${state}&code=${code}`)\n        .then((response) => {\n          console.log(response);\n          if (response.data.auth) {\n            const user = response.data.result;\n            const roles = response.data.roles;\n\n            setAuth({ user: user, roles: roles });\n\n            // redirects user to where they were trying to go (or to home page)\n            navigate(from, {replace: true});\n          } else {\n            setAuth({});\n            console.log(\"Failed to get token.\");\n            // Redirect to a 404 unauthorised page\n            navigate('/Unauthorised', {replace: true});\n          }\n        })\n        .catch((err) => {\n          console.log(err);\n        });\n    } else {\n      console.log(\"Authorisation request denied\");\n      // Redirect to a 404 unauthorised page\n      navigate('/Unauthorised', {replace: true});\n\n    }\n  }, []); // empty dependency array to ensure this effect only runs once on mount\n}\n\nexport default LoginCallback;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,OAAO,MAAM,kBAAkB;AACtC,SAASC,SAAS,QAAQ,OAAO;AACjC,SAASC,IAAI,EAAEC,WAAW,EAAEC,WAAW,QAAQ,kBAAkB;AAEjEL,KAAK,CAACM,QAAQ,CAACC,eAAe,GAAG,IAAI;;AAErC;AACA,SAASC,aAAaA,CAAA,EAAG;EAAAC,EAAA;EAAA,IAAAC,eAAA,EAAAC,oBAAA;EACvB,MAAM;IAAEC;EAAQ,CAAC,GAAGX,OAAO,EAAE;EAE7B,MAAMY,QAAQ,GAAGT,WAAW,EAAE;EAC9B,MAAMU,QAAQ,GAAGT,WAAW,EAAE;EAC9B,MAAMU,IAAI,GAAG,EAAAL,eAAA,GAAAI,QAAQ,CAACE,KAAK,cAAAN,eAAA,wBAAAC,oBAAA,GAAdD,eAAA,CAAgBK,IAAI,cAAAJ,oBAAA,uBAApBA,oBAAA,CAAsBM,QAAQ,KAAI,GAAG;EAElD,MAAMC,WAAW,GAAG,IAAIC,eAAe,CAACL,QAAQ,CAACM,MAAM,CAAC;EACxD,MAAMC,MAAM,GAAGH,WAAW,CAACI,GAAG,CAAC,QAAQ,CAAC;EAExCpB,SAAS,CAAC,MAAM;IACd,IAAImB,MAAM,KAAK,SAAS,EAAE;MACxB,MAAME,IAAI,GAAGL,WAAW,CAACI,GAAG,CAAC,MAAM,CAAC;MACpC,MAAMN,KAAK,GAAGE,WAAW,CAACI,GAAG,CAAC,OAAO,CAAC;MAEtCtB,KAAK,CACFsB,GAAG,CAAE,2CAA0CN,KAAM,SAAQO,IAAK,EAAC,CAAC,CACpEC,IAAI,CAAEC,QAAQ,IAAK;QAClBC,OAAO,CAACC,GAAG,CAACF,QAAQ,CAAC;QACrB,IAAIA,QAAQ,CAACG,IAAI,CAACC,IAAI,EAAE;UACtB,MAAMC,IAAI,GAAGL,QAAQ,CAACG,IAAI,CAACP,MAAM;UACjC,MAAMU,KAAK,GAAGN,QAAQ,CAACG,IAAI,CAACG,KAAK;UAEjCnB,OAAO,CAAC;YAAEkB,IAAI,EAAEA,IAAI;YAAEC,KAAK,EAAEA;UAAM,CAAC,CAAC;;UAErC;UACAlB,QAAQ,CAACE,IAAI,EAAE;YAACiB,OAAO,EAAE;UAAI,CAAC,CAAC;QACjC,CAAC,MAAM;UACLpB,OAAO,CAAC,CAAC,CAAC,CAAC;UACXc,OAAO,CAACC,GAAG,CAAC,sBAAsB,CAAC;UACnC;UACAd,QAAQ,CAAC,eAAe,EAAE;YAACmB,OAAO,EAAE;UAAI,CAAC,CAAC;QAC5C;MACF,CAAC,CAAC,CACDC,KAAK,CAAEC,GAAG,IAAK;QACdR,OAAO,CAACC,GAAG,CAACO,GAAG,CAAC;MAClB,CAAC,CAAC;IACN,CAAC,MAAM;MACLR,OAAO,CAACC,GAAG,CAAC,8BAA8B,CAAC;MAC3C;MACAd,QAAQ,CAAC,eAAe,EAAE;QAACmB,OAAO,EAAE;MAAI,CAAC,CAAC;IAE5C;EACF,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;AACV;AAACvB,EAAA,CA5CQD,aAAa;EAAA,QACAP,OAAO,EAEVG,WAAW,EACXC,WAAW;AAAA;AAAA8B,EAAA,GAJrB3B,aAAa;AA8CtB,eAAeA,aAAa;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}